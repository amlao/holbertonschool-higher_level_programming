>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Test cases given
>>> bg = BaseGeometry()
>>> bg.integer_validator('my_int', 12)
>>> bg.integer_validator('width', 89)
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
  File "<pyshell#25>", line 1, in <module>
    bg.integer_validator("name", "John")
  File "<pyshell#20>", line 11, in integer_validator
    raise TypeError('{:s} must be an integer'.format(name))
TypeError: name must be an integer
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
  File "<pyshell#26>", line 1, in <module>
    bg.integer_validator("name", "John")
  File "<pyshell#20>", line 11, in integer_validator
    raise TypeError('{:s} must be an integer'.format(name))
TypeError: name must be an integer
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
  File "<pyshell#27>", line 1, in <module>
    bg.integer_validator("distance", -4)
  File "<pyshell#20>", line 13, in integer_validator
    raise ValueError('{:s} must be greater than 0'.format(name))
ValueError: distance must be greater than 0

>>> bg.integer_validator()
Traceback (most recent call last):
  File "<pyshell#2>", line 1, in <module>
    bg.integer_validator()
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator("age")
Traceback (most recent call last):
  File "<pyshell#3>", line 1, in <module>
    bg.integer_validator("age")
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.area()
Traceback (most recent call last):
  File "<pyshell#4>", line 1, in <module>
    bg.area()
  File "<pyshell#0>", line 7, in area
    raise Exception('area() is not implemented')
Exception: area() is not implemented
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
  File "<pyshell#5>", line 1, in <module>
    bg.integer_validator("age", 0)
  File "<pyshell#0>", line 13, in integer_validator
    raise ValueError('{:s} must be greater than 0'.format(name))
ValueError: age must be greater than 0
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
  File "<pyshell#7>", line 1, in <module>
    bg.integer_validator("age", (4,))
  File "<pyshell#0>", line 11, in integer_validator
    raise TypeError('{:s} must be an integer'.format(name))
TypeError: age must be an integer
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
  File "<pyshell#9>", line 1, in <module>
    bg.integer_validator("age", [3])
  File "<pyshell#0>", line 11, in integer_validator
    raise TypeError('{:s} must be an integer'.format(name))
TypeError: age must be an integer
>>> bg.integer_validator('age', True)
Traceback (most recent call last):
  File "<pyshell#10>", line 1, in <module>
    bg.integer_validator('age', True)
  File "<pyshell#0>", line 11, in integer_validator
    raise TypeError('{:s} must be an integer'.format(name))
TypeError: age must be an integer
>>> bg.integer_validator("age", {3,4})
Traceback (most recent call last):
  File "<pyshell#11>", line 1, in <module>
    bg.integer_validator("age", {3,4})
  File "<pyshell#0>", line 11, in integer_validator
    raise TypeError('{:s} must be an integer'.format(name))
TypeError: age must be an integer
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
  File "<pyshell#12>", line 1, in <module>
    bg.integer_validator("age", None)
  File "<pyshell#0>", line 11, in integer_validator
    raise TypeError('{:s} must be an integer'.format(name))
TypeError: age must be an integer
